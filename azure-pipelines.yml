# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

variables:
  MAVEN_CACHE_FOLDER: $(Pipeline.Workspace)/.m2/repository
  MAVEN_OPTS: '-Dmaven.repo.local=$(MAVEN_CACHE_FOLDER)'

stages:
- stage: 'BUILD'
  displayName: 'Build the web application'
  jobs: 
  - job: 'Build'
    displayName: 'Maven build jar'
    pool: 
      vmImage: 'ubuntu-latest'
    steps:
    - task: Cache@2
      inputs:
        key: 'maven | "$(Agent.OS)" | **/pom.xml'
        restoreKeys: |
          maven | "$(Agent.OS)"
          maven
        path: $(MAVEN_CACHE_FOLDER)
      displayName: Cache Maven local repo
    - script: mvn install -B -e
    - task: Maven@3
      inputs:
        mavenPomFile: 'pom.xml'
        mavenOptions: '-Xmx3072m $(MAVEN_OPTS)'
        javaHomeOption: 'JDKVersion'
        jdkVersionOption: '1.11'
        jdkArchitectureOption: 'x64'
        publishJUnitResults: true
        testResultsFiles: '**/surefire-reports/TEST-*.xml'
        goals: 'package'
  - job: 'Image'      
    displayName: 'Maven build image'
    pool:
      vmImage: 'ubuntu-image'
    steps:
    - task: Maven@3
      displayName: 'Build docker image'
      inputs:
        mavenPomFile: 'pom.xml'
        goals: 'spring-boot:build-image'
        publishJUnitResults: false
        jdkVersionOption: '1.11'

- stage: 'PUSH'
  displayName: 'Push to image repo'
  jobs: 
  - job: 'Push'
    displayName: 'Push job'
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - task: Docker@2
      displayName:
      inputs:
        command: login
        containerRegistry: reg.lab
    - task: Docker@2
      displayName: Push to reg.lab
      inputs:
        command: push
        repository: tkgm/spring-petclinic:2.5.0-SNAPSHOT
        tags: |
          test


